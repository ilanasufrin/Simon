html, body {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  position: fixed!important;
}
/* To prevent long-press that will bring up copy-paste dialog. */
* {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-touch-callout: none;
  -moz-touch-callout: none;
  -ms-touch-callout: none;
  touch-callout: none;
  outline: 0; /* To prevent blue-box outline after click: http://stackoverflow.com/questions/21719306/getting-rid-of-a-blue-box-around-button-when-pressed */
}
textarea, input {
  -webkit-user-select: text !important;
  -moz-user-select: text !important;
  -ms-user-select: text !important;
  user-select: text !important;
}
[ng\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak {
  display: none !important;
}
body {
  background-color: #383f49;
}

.canvas {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
}

.row {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
}

.pad {
  opacity: .5;
  cursor: pointer;
  outline: none;
  transition: opacity 150ms cubic-bezier(.4, 0, .2, 1);
  position: relative;
}

.noPointer {
  pointer-events: none;
}

.pad:hover {
  opacity: .7;
}

.pad:active {
  opacity: 1;
}

.green {
  background-image: url(../exports/GreenPad.svg);
  background-size: cover;
}
.red {
  background-image: url(../exports/RedPad.svg);
  background-size: cover;
}
.yellow {
  background-image: url(../exports/YellowPad.svg);
  background-size: cover;
}
.blue {
  background-image: url(../exports/BluePad.svg);
  background-size: cover;
}

.highlighted {
    opacity: 1;
    transition: opacity .5s ease-in-out;
    -moz-transition: opacity .5s ease-in-out;
    -webkit-transition: opacity .5s ease-in-out;
}

.unHighlighted {
    opacity: .5;
    transition: opacity .5s ease-in-out;
    -moz-transition: opacity .5s ease-in-out;
    -webkit-transition: opacity .5s ease-in-out;
}

.slowlyAppear {
  animation: slowlyAppear 0.5s linear;
}

@keyframes slowlyAppear {
  from {opacity: 0.1;}
  to {opacity: 1;}
}

.play-btn-disabled-styles {
  text-shadow: none;
  cursor: not-allowed;
  opacity: .2;
}

.play-btn {
  /* Button Resets */
  margin: 0;
  padding: 0;
  border: 0;
  background: none;
  outline: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  -webkit-tap-highlight: rgba(0, 0, 0, 0);

  /* Custom Styles */
  position: absolute;
  left: calc(50% - 27px);
  top: calc(50% - 27px);
  width: 60px;
  height: 60px;
  line-height: 60px;
  font-size: 60px;
  z-index: 10;

  display: flex;
  align-items: center;
  justify-content: flex-end;

  color: white;
  text-shadow: 0px 2px 4px rgba(255, 255, 255, .3),
               0px 4px 5px rgba(255, 255, 255, .21),
               0px 1px 10px rgba(255, 255, 255, .18);
  cursor: pointer;

  transition: text-shadow 120ms cubic-bezier(.4, 0, .2, 1);
  will-change: opacity, text-shadow;
}

.play-btn:hover,
.play-btn:focus {
  text-shadow: 0px 5px 5px rgba(255, 255, 255, .3),
               0px 8px 10px rgba(255, 255, 255, .21),
               0px 3px 14px rgba(255, 255, 255, .18);
}

.play-btn:active {
  text-shadow: 0px 6px 6px rgba(255, 255, 255, .3),
               0px 10px 14px rgba(255, 255, 255, .21),
               0px 4px 18px rgba(255, 255, 255, .18);
}

.play-btn:disabled {
  text-shadow: none;
  cursor: not-allowed;
}

.play-btn__icon {
  position: relative;
  overflow: hidden;
}

.play-btn__icon::before {
  opacity: .8;
  transition: opacity 120ms cubic-bezier(.4, 0, .2, 1);
}

.play-btn:hover .play-btn__icon::before,
.play-btn:focus .play-btn__icon::before {
  opacity: 1;
}

.play-btn:disabled .play-btn__icon::before {
  opacity: .2;
}

@keyframes play {
  0% {
    opacity: .2;
    transform: scale(0, 0);
  }

  100% {
    opacity: 0;
    transform: scale(2, 2);
  }
}

.play-btn::after {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  content: "";

  background-color: white;
  border-radius: 50%;

  opacity: 0;
  transform: scale(0, 0);
  transform-origin: center center;
}

.play-btn--playing::after {
  animation: play 1000ms cubic-bezier(0, 0, .2, 1) infinite;
}

/*computer pointing animation*/

@keyframes ghostPoint {
  from {
    opacity: 1;
    transform: scale(0);
  }

  40%, 100% {
    opacity: 0;
    transform: scale(1);
  }
}

#greenRing, #redRing, #blueRing, #yellowRing {
  width: 40px;
  height: 40px;
  box-sizing: border-box;
  border: 2px solid black;
  border-radius: 50%;
  opacity: 1;
  transform: scale(0);
  position: absolute;
  left: calc(50% - 20px);
  top: calc(50% - 20px);
  z-index: 2;
}


.animating #greenRing,
.animating #redRing,
.animating #blueRing,
.animating #yellowRing {
  animation: ghostPoint 1000ms ease-out;
}
